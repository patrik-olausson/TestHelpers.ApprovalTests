using System;
using ApprovalTests;
using ApprovalTests.Core;
using TestHelpers.Utils;

namespace TestHelpers.ApprovalTests
{
    /// <summary>
    /// Helper class thats makes it possible to specify your own file name instead of relying on
    /// the autogenerated name, that tends to generate warnings and/or problems when using TFS version control.
    /// </summary>
    public static class ApprovalsHelper
    {
        /// <summary>
        /// Verifies a text placed in a file with a name that you specify.
        /// Simply uses Approvals.Verify with a custom file namer. 
        /// </summary>
        /// <param name="text">The text to approve</param>
        /// <param name="fileName">The name of the approved.txt file</param>
        public static void Verify(string text, string fileName)
        {
            Approvals.Verify(new ApprovalTextWriter(text), new ApprovalFileNamer(fileName), Approvals.GetReporter());
        }

        /// <summary>
        /// Searches through a text and replaces all guids on the format "........-....-....-....-............".
        /// Useful for replacing values that change during a test.
        /// </summary>
        /// <param name="value">The text you want to search and replace occurances within</param>
        /// <param name="replacementValue">The value you want to insert instead of a Guid</param>
        /// <returns>The modified text</returns>
        public static string ReplaceGuids(this string value, string replacementValue = "ReplacedGuid")
        {
            return value.ReplaceAllMatches("........-....-....-....-............", replacementValue);
        }

        /// <summary>
        /// Searches through a text and replaces all json formatted date times.
        /// Useful for replacing values that change during a test.
        /// </summary>
        /// <param name="value">The text you want to search and replace occurances within</param>
        /// <param name="replacementValue">The value you want to insert instead of a date time value</param>
        /// <returns>The modified text</returns>
        public static string ReplaceDateTime(this string value, string replacementValue = "ReplacedDateTime")
        {
            return value.ReplaceAllMatches(@"""....-..-...*""|>....-..-...*<", replacementValue);
        }

        private class ApprovalFileNamer : IApprovalNamer
        {
            public string SourcePath { get; }
            public string Name { get; }

            public ApprovalFileNamer(string name)
            {
                if (string.IsNullOrWhiteSpace(name)) throw new ArgumentException("You must specify a name for the approval file");

                Name = name;
                SourcePath = Approvals.GetDefaultNamer().SourcePath;
            }
        }
    }
}
